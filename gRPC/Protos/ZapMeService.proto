syntax = "proto3";
option csharp_namespace = "ZapMe.gRPC";

import "Protos/Heartbeat.proto";
import "Protos/ServerEvents.proto";
import "Protos/SessionMessage.proto";

package zapme;

service ZapMeGrpcService {
  /*
    Used to keep the connection alive.
	This should be called every 30 seconds by default.
	This timing is subject to change, and is specified in the ServerPulse response.
  */
  rpc Heartbeat (ClientPulse) returns (ServerPulse) {}

  /*
	This is the authorization rpc, it must be called before any other rpc on initial connection.
	If authorization fails, the connection will be closed.
    This rpc will remain open until the connection is closed, closing this rpc will close the connection.
	The server will use	this rpc to send events to the client.
  */
  rpc Authorize (AuthorizeRequest) returns (stream ServerEvent) {}

  /*
    This rpc is used to send commands/voice to the other participant(s) in the session.
    The session will remain open until the connection is closed, closing this rpc will remove the client from the session.
	If the session is empty, the session will be closed.
  */
  rpc Session (stream SessionMessage) returns (stream SessionMessage) {}
}

message Empty {}
message Success {
  optional string error = 2;
}
message SuccessWithExpiration {
  optional string error = 1;
  uint64 expiresAt = 2;
}

message AuthorizeRequest {
  string SessionToken = 1;
}